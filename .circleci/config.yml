version: 2
references:

  cache_key: &cache_key
    key: cache-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key

  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  workspace: &workspace
               ~/workspace

  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace

  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - .

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m

jobs:
  dependencies:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (release)
          command: ./gradlew bundleRelease
      - *persist_release_workspace
      - store_artifacts:
          path: app/build/outputs/bundle/
          destination: /bundle/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/

  check_style:
    <<: *android_config
    steps:
      - *attach_release_workspace
      - *restore_cache
      - run:
          name: Run Checkstyle
          command: ./gradlew detektAll
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_artifacts:
          path: app/build/outputs/gnag
          destination: /reports-gnag/

  linter:
    <<: *android_config
    steps:
      - *attach_release_workspace
      - *restore_cache
      - run:
          name: Run linter
          command: ./gradlew lintProductionRelease
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/

  deploy_staging:
    <<: *android_config
    steps:
      - run:
          name: Build Staging Release Apk
          command: ./gradlew assembleStagingRelease --profile
      - run:
          name: Deploy Staging to Firebase App Distribution
          command: ./gradlew appDistributionUploadStagingRelease
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: build/reports/profile/
          destination: /profile/

workflows:
  version: 2
  workflow:
    jobs:
      - dependencies:
          filters:
            tags:
              only: /^.*/
      - deploy_staging:
          filters:
            tags:
              only: /^v\d+[.]\d+[.]\d+(-staging){0,1}$/
          requires:
            - dependencies
